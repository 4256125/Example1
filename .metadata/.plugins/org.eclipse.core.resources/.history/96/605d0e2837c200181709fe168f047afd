package SpringbootExample.Example1.util;

import java.io.Serializable;

import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;

public class PageableUtil implements Pageable, Serializable{
	private int pageNumber;
    private int pageSize;
    private Sort sort;

    public PageableUtil(int pageNumber, int pageSize, Sort sort) {
    	this.pageNumber = pageNumber;
    	this.pageSize = pageSize;
    	this.sort = sort;
    }
    
    public PageableUtil(int pageNumber, int pageSize, Sort.Direction direction,
            String... properties) {
        this(pageNumber, pageSize, new Sort(direction, properties));
    }
    
	@Override
	public int getPageNumber() {
		return pageNumber;
	}

	@Override
	public int getPageSize() {
		return pageSize;
	}

    @Override
    public int getOffset() {
        return (pageNumber - 1) * pageSize;
	}

    @Override
    public Sort getSort() {
        return sort;
	}

    @Override
    public Pageable next() {
        return new PageableUtil(getPageNumber() + 1, getPageSize(), getSort());
    }

	@Override
	public Pageable previousOrFirst() {
		return hasPrevious() ? new PageableUtil(getPageNumber() - 1, getPageSize(), getSort())
				: this;
	}

	@Override
    public Pageable first() {
        return new PageableUtil(1, getPageSize(), getSort());
    }

	@Override
    public boolean hasPrevious() {
        return pageNumber > 1;
    }
	
}
